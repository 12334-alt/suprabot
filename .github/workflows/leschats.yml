name: Download and Query Ruy Lopez Book

on:
  workflow_dispatch:

jobs:
  download-book:
    runs-on: ubuntu-latest

    steps:
      - name: Download from PixelDrain
        run: |
          mkdir -p engines
          curl -L "https://pixeldrain.com/api/file/gQziifHp?download" \
            -o engines/ruylopez_book.bin
          ls -lh engines/ruylopez_book.bin

      - name: Upload book as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ruylopez-book
          path: engines/ruylopez_book.bin

  query-book:
    needs: download-book
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y stockfish
          pip install chess polyglot

      - name: Download book artifact
        uses: actions/download-artifact@v4
        with:
          name: ruylopez-book
          path: engines

      - name: Generate FEN for Ruy Lopez
        run: |
          FEN=$(echo -e "uci\nposition startpos moves e2e4 e7e5 g1f3 b8c6 f1b5\nd\nquit" | stockfish | grep "Fen:" | cut -d' ' -f2-)
          echo "FEN=$FEN" >> $GITHUB_ENV
          echo "Generated FEN: $FEN"

      - name: Query book for moves
        run: |
          echo 'import chess' > script.py
          echo 'import chess.polyglot' >> script.py
          echo 'import os' >> script.py
          echo 'fen = os.getenv("FEN")' >> script.py
          echo 'board = chess.Board(fen)' >> script.py
          echo 'book_path = "engines/ruylopez_book.bin"' >> script.py
          echo 'print(f"Querying book at: {board.fen()}")' >> script.py
          echo 'try:' >> script.py
          echo '    with chess.polyglot.open_reader(book_path) as reader:' >> script.py
          echo '        entries = list(reader.find_all(board))' >> script.py
          echo '        if entries:' >> script.py
          echo '            for entry in entries:' >> script.py
          echo '                print(f"- {board.san(entry.move())} (weight: {entry.weight})")' >> script.py
          echo '        else:' >> script.py
          echo '            print("No book moves found")' >> script.py
          echo 'except FileNotFoundError:' >> script.py
          echo '    print("Book file not found!")' >> script.py
          python3 script.py
