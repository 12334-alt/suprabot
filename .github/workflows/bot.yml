name: Run bot with Cloudflare Tunnel

on:
  workflow_dispatch:
  schedule:
    - cron: "1 */5 * * *"

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 355

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Decode Cloudflare Tunnel credentials
        run: |
          mkdir -p ~/.cloudflared
          echo "${{ secrets.CF_TUNNEL_CREDENTIALS }}" | base64 -d > ~/.cloudflared/cert.json
          echo "${{ secrets.CF_TUNNEL_CONFIG }}" | base64 -d > ~/.cloudflared/config.yml

      - name: Install cloudflared
        run: |
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
          chmod +x cloudflared
          sudo mv cloudflared /usr/local/bin/

      - name: Start Cloudflare Tunnel
        run: |
          cloudflared tunnel run my-tunnel-name &
          sleep 10  # Give tunnel time to initialize

      - name: Inject Lichess Token
        run: sed -i "s/TokenTimeIsBackBuddyss/${{ secrets.LICHESS_KEY }}/g" config.yml

      - name: Make engines executable
        run: |
          chmod +x ./engines/stockfish-ubuntu-x86-64-bmi2
          chmod +x ./engines/fairy-stockfish_x86-64-bmi2

      - name: Run bot
        run: |
          echo "Starting bot..."
          python3 -u user_interface.py "tournament" &
          PID=$!
          ( sleep 20700 && echo "Time up. Killing bot..." && kill -SIGTERM $PID ) &
          wait $PID
          echo "Bot ended cleanly."

      - name: üîÅ Self-Restart
        if: always()
        run: gh workflow run bot.yml
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

